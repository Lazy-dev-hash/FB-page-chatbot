
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Management</title>
    <link rel="stylesheet" href="/style.css">
    <style>
        .users-grid {
            display: grid;
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .user-card {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 20px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: transform 0.3s ease;
        }
        
        .user-card:hover {
            transform: translateY(-5px);
        }
        
        .user-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .user-id {
            color: #4CAF50;
            font-weight: bold;
            font-family: monospace;
        }
        
        .user-badge {
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 500;
        }
        
        .badge-new {
            background: rgba(76, 175, 80, 0.8);
            color: white;
        }
        
        .badge-active {
            background: rgba(33, 150, 243, 0.8);
            color: white;
        }
        
        .badge-inactive {
            background: rgba(158, 158, 158, 0.8);
            color: white;
        }
        
        .user-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 15px;
            margin-bottom: 15px;
        }
        
        .user-stat {
            text-align: center;
            background: rgba(255, 255, 255, 0.05);
            padding: 10px;
            border-radius: 10px;
        }
        
        .stat-number {
            display: block;
            color: #4CAF50;
            font-weight: bold;
            font-size: 1.2rem;
        }
        
        .stat-label {
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.9rem;
        }
        
        .last-message {
            background: rgba(255, 255, 255, 0.05);
            padding: 10px;
            border-radius: 8px;
            border-left: 3px solid #4CAF50;
            margin-top: 10px;
        }
        
        .last-message-text {
            color: white;
            margin-bottom: 5px;
        }
        
        .last-message-time {
            color: rgba(255, 255, 255, 0.6);
            font-size: 0.9rem;
        }
        
        .filters {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 30px;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        .filter-buttons {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        
        .filter-btn {
            padding: 8px 16px;
            background: rgba(255, 255, 255, 0.1);
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .filter-btn.active {
            background: rgba(76, 175, 80, 0.8);
        }
        
        .search-box {
            width: 100%;
            padding: 12px;
            border: none;
            border-radius: 25px;
            background: rgba(255, 255, 255, 0.9);
            margin-bottom: 15px;
            font-size: 1rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üë• User Management</h1>
            <p>Monitor and manage your bot's user base</p>
        </div>
        
        <div class="nav-menu">
            <div class="nav-links">
                <a href="/" class="nav-link">üìä Dashboard</a>
                <a href="/analytics" class="nav-link">üìà Analytics</a>
                <a href="/users" class="nav-link active">üë• Users</a>
                <a href="/logs" class="nav-link">üìã Logs</a>
                <a href="/settings" class="nav-link">‚öôÔ∏è Settings</a>
                <a href="/test" class="nav-link">üß™ Test Bot</a>
            </div>
        </div>
        
        <div class="stats-grid">
            <div class="stat-card">
                <span class="stat-number"><%= users.length %></span>
                <span class="stat-label">Total Users</span>
            </div>
            <div class="stat-card">
                <span class="stat-number"><%= users.filter(u => new Date() - new Date(u.lastSeen) < 3600000).length %></span>
                <span class="stat-label">Active (1h)</span>
            </div>
            <div class="stat-card">
                <span class="stat-number"><%= users.filter(u => new Date() - new Date(u.firstSeen) < 86400000).length %></span>
                <span class="stat-label">New (24h)</span>
            </div>
            <div class="stat-card">
                <span class="stat-number"><%= users.reduce((sum, u) => sum + u.messageCount, 0) %></span>
                <span class="stat-label">Total Messages</span>
            </div>
        </div>
        
        <div class="filters">
            <input type="text" class="search-box" id="searchBox" placeholder="Search users by ID or message content...">
            <div class="filter-buttons">
                <button class="filter-btn active" onclick="filterUsers('all')">All Users</button>
                <button class="filter-btn" onclick="filterUsers('active')">Active (1h)</button>
                <button class="filter-btn" onclick="filterUsers('new')">New (24h)</button>
                <button class="filter-btn" onclick="filterUsers('frequent')">Frequent (10+ messages)</button>
            </div>
        </div>
        
        <div class="users-grid" id="usersGrid">
            <% users.forEach(function(user) { 
                const isActive = new Date() - new Date(user.lastSeen) < 3600000;
                const isNew = new Date() - new Date(user.firstSeen) < 86400000;
                const isFrequent = user.messageCount >= 10;
            %>
            <div class="user-card" data-user-id="<%= user.id %>" data-active="<%= isActive %>" data-new="<%= isNew %>" data-frequent="<%= isFrequent %>">
                <div class="user-header">
                    <span class="user-id"><%= user.id %></span>
                    <span class="user-badge <%= isNew ? 'badge-new' : (isActive ? 'badge-active' : 'badge-inactive') %>">
                        <%= isNew ? 'NEW' : (isActive ? 'ACTIVE' : 'INACTIVE') %>
                    </span>
                </div>
                
                <div class="user-stats">
                    <div class="user-stat">
                        <span class="stat-number"><%= user.messageCount %></span>
                        <span class="stat-label">Messages</span>
                    </div>
                    <div class="user-stat">
                        <span class="stat-number"><%= Math.floor((new Date() - new Date(user.firstSeen)) / 86400000) %></span>
                        <span class="stat-label">Days</span>
                    </div>
                    <div class="user-stat">
                        <span class="stat-number"><%= Math.floor((new Date() - new Date(user.lastSeen)) / 3600000) %></span>
                        <span class="stat-label">Hours Ago</span>
                    </div>
                </div>
                
                <div class="info-item">
                    <span style="color: rgba(255,255,255,0.7);">First Seen:</span>
                    <span style="color: white;"><%= new Date(user.firstSeen).toLocaleDateString() %></span>
                </div>
                
                <% if (user.lastMessage) { %>
                <div class="last-message">
                    <div class="last-message-text">"<%= user.lastMessage.substring(0, 100) %><%= user.lastMessage.length > 100 ? '...' : '' %>"</div>
                    <div class="last-message-time"><%= new Date(user.lastSeen).toLocaleString() %></div>
                </div>
                <% } %>
            </div>
            <% }); %>
        </div>
        
        <% if (users.length === 0) { %>
        <div class="config-section" style="text-align: center;">
            <h2 style="color: white;">üëã No users yet!</h2>
            <p style="color: rgba(255,255,255,0.8);">Users will appear here when they start messaging your bot.</p>
        </div>
        <% } %>
        
        <div class="buttons">
            <a href="/" class="btn btn-primary">‚Üê Back to Dashboard</a>
            <button onclick="location.reload()" class="btn btn-success">üîÑ Refresh</button>
        </div>
    </div>
    
    <script>
        let currentFilter = 'all';
        
        function filterUsers(filter) {
            currentFilter = filter;
            
            // Update button states
            document.querySelectorAll('.filter-btn').forEach(btn => btn.classList.remove('active'));
            event.target.classList.add('active');
            
            applyFilters();
        }
        
        function applyFilters() {
            const searchTerm = document.getElementById('searchBox').value.toLowerCase();
            const userCards = document.querySelectorAll('.user-card');
            
            userCards.forEach(card => {
                const userId = card.dataset.userId.toLowerCase();
                const messageText = card.querySelector('.last-message-text')?.textContent.toLowerCase() || '';
                const matchesSearch = userId.includes(searchTerm) || messageText.includes(searchTerm);
                
                let matchesFilter = true;
                switch (currentFilter) {
                    case 'active':
                        matchesFilter = card.dataset.active === 'true';
                        break;
                    case 'new':
                        matchesFilter = card.dataset.new === 'true';
                        break;
                    case 'frequent':
                        matchesFilter = card.dataset.frequent === 'true';
                        break;
                }
                
                card.style.display = (matchesSearch && matchesFilter) ? 'block' : 'none';
            });
        }
        
        // Real-time search
        document.getElementById('searchBox').addEventListener('input', applyFilters);
        
        // Auto-refresh every 60 seconds
        setTimeout(() => location.reload(), 60000);
    </script>
</body>
</html>
